{"version":3,"sources":["base/_variables.scss","layout/_page.scss","base/_mixins.scss","layout/_about-us.scss","layout/_review.scss"],"names":[],"mappings":"AAaA,MACE,QAAA,MACA,gBAAA,YCfF,MACE,YAAA,KCqCA,0CDtCF,MAGI,YAAA,MCmCF,yCDtCF,MAMI,YAAA,MAEF,aACE,UAAA,MACA,UAAA,OC4BF,0CD9BA,aAII,UAAA,OC0BJ,yCD9BA,aAOI,UAAA,OAPH,8BAUG,cAAA,KAGJ,YACE,UAAA,MErBF,wBACE,cAAA,KCDF,iBACE,WAAA,OACA,cAAA,KACA,YAAA,KACA,aAAA,KACA,UAAA,MFgCF,yCErCA,iBAOI,cAAA,MAPH,iCAUG,cAAA,KAIJ,aACE,OAAA,MAEF,cACE,OAAA,KAGF,gBACE,WAAA,KACA,KAAA,IACA,SAAA,SACA,kBAAA,iBAAA,cAAA,iBAAA,UAAA,iBFYF,0CEhBA,gBAMI,WAAA,MFUJ,yCEhBA,gBASI,WAAA,MAGJ,eACE,SAAA,SACA,IAAA,IACA,kBAAA,iBAAA,cAAA,iBAAA,UAAA,iBACA,QAAA,EACA,QAAA,KAAA,KACA,MAAA,QFgHF,mCAAA,YAAA,8BAAA,YAAA,2BAAA,YACA,4BAAA,IAAA,uBAAA,IAAA,oBAAA,IACA,4BAAA,IAAA,uBAAA,IAAA,oBAAA,IACA,yBACE,qBElHE,MAAA,MFJJ,yCEJA,eAWI,aAAA,KACA,cAAA,MAGJ,oBACE,KAAA,MFZF,yCEWA,oBAGI,KAAA,OAGJ,qBACE,MAAA,MFlBF,yCEiBA,qBAGI,MAAA","file":"review.min.css","sourcesContent":["// Colors\r\n$light: #fff;\r\n$dark: #000000;\r\n$dark-light: #1B1B1B;\r\n$primary: #EF7F1A;\r\n$second: #F3F3F3;\r\n$second-dark: #929292;\r\n\r\n$body-background: $light;\r\n$transparent: rgba(255, 255, 255, 0);\r\n\r\n$speed: 300ms;\r\n$time-function: ease-in-out;\r\n:root {\r\n  --speed: #{$speed};\r\n  --time-function: #{$time-function};\r\n}\r\n\r\n//layout\r\n$desktop-padding: 44px;\r\n$mobile-padding: 20px;\r\n$desktop-width: 1642px;\r\n$container: $desktop-width + (#{$desktop-padding * 2});",".page {\r\n  padding-top: 54px;\r\n  @include media(1200) {\r\n    padding-top: 50px;\r\n  }\r\n  @include media(540) {\r\n    padding-top: 15px;\r\n  }\r\n  &__title {\r\n    max-width: 380px;\r\n    text-wrap: normal;\r\n    @include media(1200) {\r\n      max-width: 280px;\r\n    }\r\n    @include media(540) {\r\n      max-width: 180px;\r\n    }\r\n    &:not(:last-child) {\r\n      margin-bottom: 14px;\r\n    }\r\n  }\r\n  &__text {\r\n    max-width: 651px;\r\n  }\r\n}","\r\n@mixin transition($property: all, $speed: $speed, $time-function: $time-function) {\r\n  transition-property: $property;\r\n  transition-duration: $speed;\r\n  transition-timing-function: $time-function;\r\n}\r\n\r\n// Button sizes\r\n@mixin btn-size($padding-vertical, $padding-horizontal, $font-size, $line-height) {\r\n  padding: $padding-vertical $padding-horizontal;\r\n  font-size: $font-size;\r\n  line-height: $line-height;\r\n}\r\n\r\n/* FONT SourceSansPro */\r\n//@mixin fl {font-family: 'Rubik-Light',sans-serif;}\r\n//@mixin fr {font-family: 'Rubik-Regular',sans-serif;}\r\n//@mixin fm {font-family: 'Rubik-Medium',sans-serif;}\r\n//@mixin fdb {font-family: 'Rubik-SemiBold',sans-serif;}\r\n//@mixin fb {font-family: 'Rubik-Bold',sans-serif;}\r\n\r\n/*images*/\r\n\r\n@mixin cover {\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: 50% 50%; }\r\n\r\n\r\n// vertical-align at center\r\n@mixin vcenter {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%,-50%); }\r\n\r\n/*=======================START-MEDIA=====================*/\r\n@mixin media($width) {\r\n  @media only screen and (max-width: $width+ \"px\") {\r\n    @content; } }\r\n\r\n@mixin min-media($width) {\r\n  @media only screen and (min-width: $width+ \"px\") {\r\n    @content; } }\r\n\r\n/*=======================END-MEDIA=====================*/\r\n//placeholder\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder { @content; }\r\n  &:-moz-placeholder           { @content; }\r\n  &::-moz-placeholder          { @content; }\r\n  &:-ms-input-placeholder      { @content; }\r\n}\r\n\r\n// font size\r\n\r\n@mixin css-lock($min-size: 1, $max-size: 1.4, $min-width: 20, $max-width: 100, $property: font-size, $unit: px) {\r\n  #{$property}: #{$max-size}#{$unit};\r\n  #{$property}: calc(#{$min-size}#{$unit} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}#{$unit}) / (#{$max-width} - #{$min-width})));\r\n  @media (max-width: #{$min-width}#{$unit}) {\r\n    #{$property}: #{$min-size}#{$unit}; }\r\n  @media (min-width: #{$max-width}#{$unit}) {\r\n    #{$property}: #{$max-size}#{$unit}; } }\r\n\r\n@function decimal-round($number, $digits: 0, $mode: round) {\r\n  $n: 1;\r\n  // $number must be a number\r\n  @if type-of($number) != number {\r\n    @warn '#{ $number } is not a number.';\r\n    @return $number;\r\n  }\r\n  // $digits must be a unitless number\r\n  @if type-of($digits) != number {\r\n    @warn '#{ $digits } is not a number.';\r\n    @return $number;\r\n  } @else if not unitless($digits) {\r\n    @warn '#{ $digits } has a unit.';\r\n    @return $number;\r\n  }\r\n  @if $digits > 0 {\r\n    @for $i from 1 through $digits {\r\n      $n: $n * 10;\r\n    }\r\n  }\r\n  @if $mode == round {\r\n    @return round($number * $n) / $n;\r\n  } @else if $mode == ceil {\r\n    @return ceil($number * $n) / $n;\r\n  } @else if $mode == floor {\r\n    @return floor($number * $n) / $n;\r\n  } @else {\r\n    @warn '#{ $mode } is undefined keyword.';\r\n    @return $number;\r\n  }\r\n}\r\n\r\n@mixin font-settings($font-size, $light-height, $round-light-height: 2) {\r\n  font-size: $font-size + px;\r\n  line-height: decimal-round($light-height / $font-size, $round-light-height);\r\n}\r\n\r\n// end font size\r\n\r\n\r\n/* media breakpoint mixin */\r\n@mixin media-breakpoint-up($name) {\r\n  @if map_has_key($breakpoint, $name) {\r\n    @media (min-width: map_get($breakpoint, $name)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @media (min-width: $name) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder { @content; }\r\n  &:-moz-placeholder           { @content; }\r\n  &::-moz-placeholder          { @content; }\r\n  &:-ms-input-placeholder      { @content; }\r\n}\r\n\r\n/* Single property transition mixin */\r\n$animation-speed: .3s;\r\n\r\n@mixin multi-transition($transition: $speed, $function: $time-function, $properties-list...) {\r\n  transition-duration: $transition;\r\n  transition-timing-function: $function;\r\n  transition-property: $properties-list;\r\n}\r\n\r\n@mixin size($width, $height: $width) {\r\n  width: $width + px;\r\n  height: $height + px;\r\n}\r\n\r\n\r\n// fonts\r\n@mixin font($weight, $style, $fileName, $folderName, $fontName: $folderName) {\r\n  @font-face {\r\n    font-family: '#{$fontName}';\r\n    font-display: swap;\r\n    src: url(\"../fonts/#{$folderName}/#{$fileName}.ttf\") format(\"truetype\");\r\n    font-weight: #{$weight};\r\n    font-style: #{$style};\r\n  }\r\n}\r\n\r\n// hover\r\n@mixin hover($properties: all, $speed: $speed, $time-function: $time-function) {\r\n  transition-timing-function: $time-function;\r\n  transition-duration: $speed;\r\n  transition-property: $properties;\r\n  @media (any-hover: hover) {\r\n    &:hover {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// hover and focus for link\r\n@mixin hover-focus-link($color: $primary) {\r\n  @include hover {\r\n    color: $color;\r\n  }\r\n  &:focus {\r\n    color: $color;\r\n  }\r\n}\r\n\r\n// hover and focus for property\r\n@mixin hover-focus {\r\n  @include hover {\r\n    @content;\r\n  }\r\n  &:focus {\r\n    @content;\r\n  }\r\n}\r\n\r\n// hide\r\n@mixin none() {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  border: 0;\r\n  padding: 0;\r\n  white-space: nowrap;\r\n  clip-path: inset(100%);\r\n  clip: rect(0 0 0 0);\r\n  overflow: hidden;\r\n}\r\n\r\n// gap\r\n@mixin gap($property, $value) {\r\n  @if $property == column {\r\n    @supports (column-gap: $value) {\r\n      column-gap: $value;\r\n    }\r\n    @supports not (column-gap: $value) {\r\n      margin-right: calc( 0px - (#{$value} / 2));\r\n      margin-left: calc( 0px - (#{$value} / 2));\r\n      & > * {\r\n        margin-right: calc(#{$value} / 2);\r\n        margin-left: calc(#{$value} / 2);\r\n      }\r\n    }\r\n  } @else if $property == row {\r\n    @supports (row-gap: $value) {\r\n      row-gap: $value;\r\n    }\r\n    @supports not (row-gap: $value) {\r\n      & {\r\n        margin-top: -$value;\r\n      }\r\n      & > * {\r\n        margin-top: $value;\r\n      }\r\n    }\r\n  } @else if $property == gap {\r\n    @supports (gap: $value) {\r\n      gap: $value;\r\n    }\r\n    @supports not (gap: $value) {\r\n      margin-right: calc(0px - (#{$value} / 2));\r\n      margin-left: calc(0px - (#{$value} / 2));\r\n      margin-top: -$value;\r\n      & > * {\r\n        margin-right: calc(#{$value} / 2);\r\n        margin-left: calc(#{$value} / 2);\r\n        margin-top: $value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// supports\r\n@mixin supports($property, $value) {\r\n  @supports ($property: $value) {\r\n    #{$property}: $value;\r\n  }\r\n  @supports not ($property: $value) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// grid\r\n@mixin grid-col($column) {\r\n  &__col-#{$column} {\r\n    grid-template-columns: repeat(#{$column}, 1fr);\r\n  }\r\n}\r\n\r\n// flex-basis\r\n@mixin flex-template($item, $gap) {\r\n  flex-basis: calc((100% - #{$item - 1} * #{$gap}) / #{$item});\r\n}\r\n\r\n@mixin line-clamp($clamp, $height: none) {\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: $clamp;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  max-height: $height;\r\n  overflow: hidden;\r\n}\r\n\r\n//@mixin gap($value-column, $value-row: $value-column) {\r\n//  @if $value-row == 0 {\r\n//    & {\r\n//      margin-right: calc( 0px - (#{$value-column} / 2));\r\n//      margin-left: calc( 0px - (#{$value-column} / 2));\r\n//    }\r\n//    & > * {\r\n//      margin-right: calc(#{$value-column} / 2);\r\n//      margin-left: calc(#{$value-column} / 2);\r\n//    }\r\n//  }\r\n//  @else if $value-column == 0 {\r\n//    & {\r\n//      margin-top: -$value-row;\r\n//    }\r\n//    & > * {\r\n//      margin-top: $value-row;\r\n//    }\r\n//  }\r\n//  @else {\r\n//    & {\r\n//      margin-left: calc(0px - #{$value-column} / 2);\r\n//      margin-right: calc(0px - #{$value-column} / 2);\r\n//      margin-top: -$value-row;\r\n//    }\r\n//    & > * {\r\n//      margin-left: calc(#{$value-column} / 2);\r\n//      margin-right: calc(#{$value-column} / 2);\r\n//      margin-top: $value-row;\r\n//    }\r\n//  }\r\n//}\r\n\r\n@function decimal-round($number, $digits: 0, $mode: round) {\r\n  $n: 1;\r\n  // $number must be a number\r\n  @if type-of($number) != number {\r\n    @warn '#{ $number } is not a number.';\r\n    @return $number;\r\n  }\r\n  // $digits must be a unitless number\r\n  @if type-of($digits) != number {\r\n    @warn '#{ $digits } is not a number.';\r\n    @return $number;\r\n  } @else if not unitless($digits) {\r\n    @warn '#{ $digits } has a unit.';\r\n    @return $number;\r\n  }\r\n  @if $digits > 0 {\r\n    @for $i from 1 through $digits {\r\n      $n: $n * 10;\r\n    }\r\n  }\r\n  @if $mode == round {\r\n    @return round($number * $n) / $n;\r\n  } @else if $mode == ceil {\r\n    @return ceil($number * $n) / $n;\r\n  } @else if $mode == floor {\r\n    @return floor($number * $n) / $n;\r\n  } @else {\r\n    @warn '#{ $mode } is undefined keyword.';\r\n    @return $number;\r\n  }\r\n}\r\n\r\n",".about-us {\r\n  &__page-heading {\r\n    margin-bottom: 54px;\r\n  }\r\n}",".review {\r\n  &__heading {\r\n    text-align: center;\r\n    margin-bottom: 42px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 786px;\r\n    @include media(540) {\r\n      margin-bottom: 11px;\r\n    }\r\n    .heading__title {\r\n      margin-bottom: 29px;\r\n    }\r\n  }\r\n  $gap: 10px;\r\n  &__row {\r\n    margin: -$gap;\r\n  }\r\n  &__item {\r\n    margin: $gap;\r\n  }\r\n\r\n  &__button {\r\n    margin-top: 74px;\r\n    left: 50%;\r\n    position: relative;\r\n    transform: translateX(-50%);\r\n    @include media(1200) {\r\n      margin-top: 58px;\r\n    }\r\n    @include media(540) {\r\n      margin-top: 42px;\r\n    }\r\n  }\r\n  &__arrow {\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    z-index: 2;\r\n    padding: 10px 20px;\r\n    color: $primary;\r\n    @include hover {\r\n      color: $dark;\r\n    }\r\n    @include media(540) {\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n    }\r\n  }\r\n  &__arrow-left {\r\n    left: -30px;\r\n    @include media(540) {\r\n      left: -10px;\r\n    }\r\n  }\r\n  &__arrow-right {\r\n    right: -30px;\r\n    @include media(540) {\r\n      right: -10px;\r\n    }\r\n  }\r\n}"]}