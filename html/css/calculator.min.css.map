{"version":3,"sources":["base/_variables.scss","layout/_page-heading.scss","base/_mixins.scss","calculator.scss"],"names":[],"mappings":"AAaA,MACE,QAAA,MACA,gBAAA,YACA,KAAA,IChBF,cACE,YAAA,KCeA,0CDhBF,cAGI,YAAA,MCaF,yCDhBF,cAMI,YAAA,MAEF,qBACE,UAAA,MACA,UAAA,OCMF,0CDRA,qBAII,UAAA,OCIJ,yCDRA,qBAOI,UAAA,OAPH,sCAUG,cAAA,KAGJ,oBACE,UAAA,MElBJ,YACE,eAAA,MDWA,0CCZF,YAGI,eAAA,MDSF,yCCZF,YAMI,eAAA,MAEF,0BACE,cAAA,KDGF,0CCJA,0BAGI,cAAA,MDCJ,yCCJA,0BAMI,cAAA,MDFJ,0CCKA,mBAEI,sBAAA,KAFH,oCAKG,cAAA,MDVJ,0CCKC,oCAOK,cAAA,ODZN,yCCKC,oCAUK,cAAA,MDXN,0CCCC,4DAgBO,oBAAA,IAhBP,4DAsBS,iBAAA,KD3BV,0CCiCA,2BAEI,cAAA,MDnCJ,yCCiCA,2BAKI,cAAA,MAGJ,kBACE,QAAA,KAAA,KACA,cAAA,KACA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,WAAA,IAAA,MAAA,KAJD,6BAMG,cAAA,IAAA,MAAA,KD/CJ,0CCyCA,kBASI,aAAA,KACA,cAAA,GDnDJ,yCCyCA,kBAaI,QAAA,KAAA,GDlDJ,0CCqCC,kDAmBS,kBAAA,WAAA,cAAA,WAAA,UAAA,WACA,MAAA,SApBT,oDAyBS,kBAAA,UAAA,cAAA,UAAA,UAAA,UAMV,kBACE,kBAAA,EAAA,YAAA,EACA,aAAA,KD1EF,yCCwEA,kBAII,QAAA,MAGJ,0BACE,UAAA,MACA,MAAA,KAEF,wBDxBA,UAAA,KACA,YAAA,ICyBE,eAAA,KACA,yBAAA,KAAA,qBAAA,KAAA,iBAAA,KDpGF,4BAAA,IAAA,uBAAA,IAAA,oBAAA,IACA,4BAAA,IAAA,uBAAA,IAAA,oBAAA,IACA,mCAAA,YAAA,8BAAA,YAAA,2BAAA,YAYA,0CCmFA,wBAMI,UAAA,MDzFJ,yCCmFA,wBASI,UAAA,MAGJ,kBACE,WAAA,KACA,cAAA,IACA,QAAA,KDlGF,0CC+FA,kBAKI,WAAA,MDpGJ,yCC+FA,kBAQI,WAAA,MAGJ,kBACE,WAAA,KACA,YAAA,KACA,kBAAA,kBAAA,cAAA,kBAAA,UAAA,kBD7GF,0CC0GA,kBAKI,WAAA,MAGJ,oBDlCA,MAAA,KACA,OAAA,KCoCE,SAAA,SACA,QAAA,KACA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OACA,iBAAA,OAAA,cAAA,OAAA,gBAAA,OACA,kBAAA,EAAA,YAAA,EACA,aAAA,KD3HF,0CCkHA,oBAWI,YAAA,KACA,aAAA,OD9HJ,yCCkHA,oBAeI,YAAA,MAfH,0BAAA,2BAmBG,QAAA,GACA,WAAA,aACA,SAAA,SArBH,2BAwBG,MAAA,kBACA,OAAA,IAzBH,0BA4BG,OAAA,kBACA,MAAA,ID7JJ,4BAAA,IAAA,uBAAA,IAAA,oBAAA,IACA,4BAAA,IAAA,uBAAA,IAAA,oBAAA,IACA,mCAAA,YAAA,8BAAA,YAAA,2BAAA","file":"calculator.min.css","sourcesContent":["// Colors\r\n$light: #fff;\r\n$dark: #000000;\r\n$dark-light: #1B1B1B;\r\n$primary: #EF7F1A;\r\n$second: #F3F3F3;\r\n$second-dark: #929292;\r\n\r\n$body-background: $light;\r\n$transparent: rgba(255, 255, 255, 0);\r\n\r\n$speed: 300ms;\r\n$time-function: ease-in-out;\r\n:root {\r\n  --speed: #{$speed};\r\n  --time-function: #{$time-function};\r\n  --vh: 1vh;\r\n}\r\n\r\n//layout\r\n$desktop-padding: 44px;\r\n$mobile-padding: 20px;\r\n$desktop-width: 1642px;\r\n$site-container: $desktop-width + ($desktop-padding * 2);",".content-page {\r\n  padding-top: 54px;\r\n  @include media(1200) {\r\n    padding-top: 50px;\r\n  }\r\n  @include media(540) {\r\n    padding-top: 15px;\r\n  }\r\n  &__title {\r\n    max-width: 380px;\r\n    text-wrap: normal;\r\n    @include media(1200) {\r\n      max-width: 280px;\r\n    }\r\n    @include media(540) {\r\n      max-width: 180px;\r\n    }\r\n    &:not(:last-child) {\r\n      margin-bottom: 14px;\r\n    }\r\n  }\r\n  &__text {\r\n    max-width: 651px;\r\n  }\r\n}","\r\n@mixin transition($property: all, $speed: $speed, $time-function: $time-function) {\r\n  transition-property: $property;\r\n  transition-duration: $speed;\r\n  transition-timing-function: $time-function;\r\n}\r\n\r\n// Button sizes\r\n@mixin btn-size($padding-vertical, $padding-horizontal, $font-size, $line-height) {\r\n  padding: $padding-vertical $padding-horizontal;\r\n  font-size: $font-size;\r\n  line-height: $line-height;\r\n}\r\n\r\n/*=======================START-MEDIA=====================*/\r\n@mixin media($width) {\r\n  @media only screen and (max-width: $width+ \"px\") {\r\n    @content; } }\r\n\r\n@mixin min-media($width) {\r\n  @media only screen and (min-width: $width+ \"px\") {\r\n    @content; } }\r\n\r\n/*=======================END-MEDIA=====================*/\r\n//placeholder\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder { @content; }\r\n  &:-moz-placeholder           { @content; }\r\n  &::-moz-placeholder          { @content; }\r\n  &:-ms-input-placeholder      { @content; }\r\n}\r\n\r\n// font size\r\n\r\n@mixin css-lock($min-size: 1, $max-size: 1.4, $min-width: 20, $max-width: 100, $property: font-size, $unit: px) {\r\n  #{$property}: #{$max-size}#{$unit};\r\n  #{$property}: calc(#{$min-size}#{$unit} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}#{$unit}) / (#{$max-width} - #{$min-width})));\r\n  @media (max-width: #{$min-width}#{$unit}) {\r\n    #{$property}: #{$min-size}#{$unit}; }\r\n  @media (min-width: #{$max-width}#{$unit}) {\r\n    #{$property}: #{$max-size}#{$unit}; } }\r\n\r\n@function decimal-round($number, $digits: 0, $mode: round) {\r\n  $n: 1;\r\n  // $number must be a number\r\n  @if type-of($number) != number {\r\n    @warn '#{ $number } is not a number.';\r\n    @return $number;\r\n  }\r\n  // $digits must be a unitless number\r\n  @if type-of($digits) != number {\r\n    @warn '#{ $digits } is not a number.';\r\n    @return $number;\r\n  } @else if not unitless($digits) {\r\n    @warn '#{ $digits } has a unit.';\r\n    @return $number;\r\n  }\r\n  @if $digits > 0 {\r\n    @for $i from 1 through $digits {\r\n      $n: $n * 10;\r\n    }\r\n  }\r\n  @if $mode == round {\r\n    @return round($number * $n) / $n;\r\n  } @else if $mode == ceil {\r\n    @return ceil($number * $n) / $n;\r\n  } @else if $mode == floor {\r\n    @return floor($number * $n) / $n;\r\n  } @else {\r\n    @warn '#{ $mode } is undefined keyword.';\r\n    @return $number;\r\n  }\r\n}\r\n\r\n@mixin font-settings($font-size, $light-height, $round-light-height: 2) {\r\n  font-size: $font-size + px;\r\n  line-height: decimal-round($light-height / $font-size, $round-light-height);\r\n}\r\n\r\n// end font size\r\n\r\n\r\n/* media breakpoint mixin */\r\n@mixin media-breakpoint-up($name) {\r\n  @if map_has_key($breakpoint, $name) {\r\n    @media (min-width: map_get($breakpoint, $name)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @media (min-width: $name) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin size($width, $height: $width) {\r\n  width: $width + px;\r\n  height: $height + px;\r\n}\r\n\r\n\r\n// fonts\r\n@mixin font($weight, $style, $fileName, $folderName, $fontName: $folderName) {\r\n  @font-face {\r\n    font-family: '#{$fontName}';\r\n    font-display: swap;\r\n    src: url(\"../fonts/#{$folderName}/#{$fileName}.ttf\") format(\"truetype\");\r\n    font-weight: #{$weight};\r\n    font-style: #{$style};\r\n  }\r\n}\r\n\r\n// hover\r\n@mixin hover($properties: all, $speed: $speed, $time-function: $time-function) {\r\n  transition-timing-function: $time-function;\r\n  transition-duration: $speed;\r\n  transition-property: $properties;\r\n  @media (any-hover: hover) {\r\n    &:hover {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// hover and focus for link\r\n@mixin hover-focus-link($color: $primary) {\r\n  @include hover {\r\n    color: $color;\r\n  }\r\n  &:focus {\r\n    color: $color;\r\n  }\r\n}\r\n\r\n// hover and focus for property\r\n@mixin hover-focus {\r\n  @include hover {\r\n    @content;\r\n  }\r\n  &:focus {\r\n    @content;\r\n  }\r\n}\r\n\r\n// gap\r\n@mixin gap($property, $value) {\r\n  @if $property == column {\r\n    @supports (column-gap: $value) {\r\n      column-gap: $value;\r\n    }\r\n    @supports not (column-gap: $value) {\r\n      margin-right: calc( 0px - (#{$value} / 2));\r\n      margin-left: calc( 0px - (#{$value} / 2));\r\n      & > * {\r\n        margin-right: calc(#{$value} / 2);\r\n        margin-left: calc(#{$value} / 2);\r\n      }\r\n    }\r\n  } @else if $property == row {\r\n    @supports (row-gap: $value) {\r\n      row-gap: $value;\r\n    }\r\n    @supports not (row-gap: $value) {\r\n      & {\r\n        margin-top: -$value;\r\n      }\r\n      & > * {\r\n        margin-top: $value;\r\n      }\r\n    }\r\n  } @else if $property == gap {\r\n    @supports (gap: $value) {\r\n      gap: $value;\r\n    }\r\n    @supports not (gap: $value) {\r\n      margin-right: calc(0px - (#{$value} / 2));\r\n      margin-left: calc(0px - (#{$value} / 2));\r\n      margin-top: -$value;\r\n      & > * {\r\n        margin-right: calc(#{$value} / 2);\r\n        margin-left: calc(#{$value} / 2);\r\n        margin-top: $value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// grid\r\n@mixin grid-col($column) {\r\n  &__col-#{$column} {\r\n    grid-template-columns: repeat(#{$column}, 1fr);\r\n  }\r\n}\r\n\r\n// flex-basis\r\n@mixin flex-template($item, $gap) {\r\n  flex-basis: calc((100% - #{$item - 1} * #{$gap}) / #{$item});\r\n}\r\n\r\n@mixin line-clamp($clamp, $height: none) {\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: $clamp;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  max-height: $height;\r\n  overflow: hidden;\r\n}","@charset \"UTF-8\";\r\n@import \"base/base\";\r\n@import \"layout/page-heading\";\r\n\r\n.calculator {\r\n  padding-bottom: 179px;\r\n  @include media(1200) {\r\n    padding-bottom: 97px;\r\n  }\r\n  @include media(540) {\r\n    padding-bottom: 64px;\r\n  }\r\n  &__page-heading {\r\n    margin-bottom: 97px;\r\n    @include media(1200) {\r\n      margin-bottom: 79px;\r\n    }\r\n    @include media(540) {\r\n      margin-bottom: 64px;\r\n    }\r\n  }\r\n  &__inner {\r\n    @include media(1200) {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    &:not(:last-child) {\r\n      margin-bottom: 147px;\r\n      @include media(1200) {\r\n        margin-bottom: 110px;\r\n      }\r\n      @include media(540) {\r\n        margin-bottom: 64px;\r\n      }\r\n    }\r\n    @include min-media(1201) {\r\n      &:first-child {\r\n        .calculator__item:last-child {\r\n          border-bottom-width: 2px;\r\n        }\r\n      }\r\n      &:last-child {\r\n        .calculator__item {\r\n          &:first-child {\r\n            border-top-width: 2px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &__title-wrapper {\r\n    @include media(1200) {\r\n      margin-bottom: 41px;\r\n    }\r\n    @include media(540) {\r\n      margin-bottom: 23px;\r\n    }\r\n  }\r\n  &__item {\r\n    padding: 35px 46px;\r\n    padding-right: 36px;\r\n    display: flex;\r\n    border-top: 1px solid $dark;\r\n    &:last-child {\r\n      border-bottom: 1px solid $dark;\r\n    }\r\n    @include media(1200) {\r\n      padding-left: 25px;\r\n      padding-right: 0px;\r\n    }\r\n    @include media(540) {\r\n      padding: 14px 0px;\r\n    }\r\n    &.is-open {\r\n      .calculator {\r\n        &__text-title {\r\n          @include min-media(1201) {\r\n            transform: scale(1.5);\r\n            color: $primary;\r\n          }\r\n        }\r\n        &__button {\r\n          &:after {\r\n            transform: scaleY(0);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &__icon {\r\n    flex-shrink: 0;\r\n    margin-right: 44px;\r\n    @include media(540) {\r\n      display: none;\r\n    }\r\n  }\r\n  &__text-wrapper {\r\n    max-width: 968px;\r\n    width: 100%;\r\n  }\r\n  &__text-title {\r\n    @include font-settings(20, 24);\r\n    text-transform: none;\r\n    transform-origin: left;\r\n    @include transition;\r\n    @include media(1200) {\r\n      font-size: 24px;\r\n    }\r\n    @include media(540) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  &__text {\r\n    margin-top: 23px;\r\n    margin-bottom: 8px;\r\n    display: none;\r\n    @include media(1200) {\r\n      margin-top: 17px;\r\n    }\r\n    @include media(540) {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n  &__link {\r\n    margin-top: 20px;\r\n    margin-left: 100%;\r\n    transform: translateX(-100%);\r\n    @include media(1200) {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n  &__button {\r\n    $btn-padding: 10px;\r\n    @include size(45);\r\n    position: relative;\r\n    padding: $btn-padding;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n    margin-right: 44px;\r\n    @include media(1200) {\r\n      margin-left: 21px;\r\n      margin-right: -$btn-padding;\r\n    }\r\n    @include media(540) {\r\n      margin-left: 14px;\r\n    }\r\n    &:before,\r\n    &:after {\r\n      content: '';\r\n      background: currentColor;\r\n      position: absolute;\r\n    }\r\n    &:before {\r\n      width: calc(100% - #{$btn-padding * 2});\r\n      height: 3px;\r\n    }\r\n    &:after {\r\n      height: calc(100% - #{$btn-padding * 2});\r\n      width: 3px;\r\n      @include transition;\r\n    }\r\n  }\r\n}"]}