{"version":3,"sources":["components/_buttons-row.scss","base/_mixins.scss","layout/_hero.scss","layout/_contact.scss"],"names":[],"mappings":"AAAA,SACE,QAAA,YAAA,QAAA,YAAA,QAAA,KCsMgC,wDDvMlC,SCwMM,mBAAA,KAAA,gBAAA,KAAA,WAAA,MAEgC,4DD1MtC,SC2MM,aAAA,uBACA,YAAA,uBACA,WACE,aAAA,eACA,YAAA,gBAzKN,0CDtCF,SAII,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OC+M2B,yBDnN/B,SCoNM,QAAA,MAE6B,6BAC7B,SACE,WAAA,MAEF,WACE,WAAA,OC3NR,MACE,YAAA,KACA,aAAA,KAIA,aACE,SAAA,SAEF,gBACE,QAAA,EACA,SAAA,SAEF,oBACE,QAAA,GACA,QAAA,EACA,WAAA,gBACA,MAAA,KACA,OAAA,KACA,SAAA,SACA,KAAA,EACA,IAAA,EAEF,eACE,SAAA,SACA,MAAA,KACA,OAAA,KACA,QAAA,EAEF,aDoEA,UAAA,KACA,YAAA,KAxDA,0CCbA,aDoEA,UAAA,KACA,YAAA,MAxDA,yCCbA,aDoEA,UAAA,KACA,YAAA,MElGF,SACE,YAAA,KACA,kBACE,YAAA,KFmCF,0CEpCA,kBAGI,YAAA,OFiCJ,yCEpCA,kBAMI,YAAA,MF8BJ,0CE3BA,cAEI,mBAAA,SAAA,sBAAA,QAAA,mBAAA,eAAA,eAAA,gBFyBJ,0CEtBA,eAEI,aAAA,KACA,cAAA,KAHH,4CAMO,YAAA,EACA,aAAA,GFeR,yCEtBA,eAYI,aAAA,KACA,cAAA,MAGJ,cACE,YAAA,EADD,oBAGG,OAAA,YFGJ,0CENA,cAMI,QAAA,GAGJ,kBACE,aAAA,KACA,cAAA,KFLF,0CEGA,kBAII,aAAA,EACA,cAAA,MFRJ,yCEGA,kBAQI,cAAA,MFXJ,0CEcA,gBAEI,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,QAFH,iCAKG,cAAA,KFnBJ,0CEcC,uCAUO,cAAA,MFxBR,yCEcC,uCAaO,cAAA,MAKR,eACE,WAAA,KACA,cAAA,KAFD,6BAIG,OAAA,KAAA,EAAA,EAGJ,yBACE,QAAA,KFxCF,0CEuCA,yBAGI,YAAA,KACA,eAAA,MF3CJ,yCEuCA,yBAOI,cAAA,EACA,aAAA,KACA,cAAA,KATH,sCAWK,YAAA,MACA,aAAA,OAIN,uBACE,cAAA,KACA,WAAA,OFrDF,0CEmDA,uBAII,QAAA,MAGH,uBAEG,iBAAA,OAAA,cAAA,OAAA,gBAAA,OACA,WAAA","file":"home-page.min.css","sourcesContent":[".buttons {\r\n  display: flex;\r\n  @include gap(column, 16px);\r\n  @include media(1200) {\r\n    flex-direction: column;\r\n    @include gap(row, 11px);\r\n  }\r\n}","\r\n@mixin transition($property: all, $speed: $speed, $time-function: $time-function) {\r\n  transition-property: $property;\r\n  transition-duration: $speed;\r\n  transition-timing-function: $time-function;\r\n}\r\n\r\n// Button sizes\r\n@mixin btn-size($padding-vertical, $padding-horizontal, $font-size, $line-height) {\r\n  padding: $padding-vertical $padding-horizontal;\r\n  font-size: $font-size;\r\n  line-height: $line-height;\r\n}\r\n\r\n/* FONT SourceSansPro */\r\n//@mixin fl {font-family: 'Rubik-Light',sans-serif;}\r\n//@mixin fr {font-family: 'Rubik-Regular',sans-serif;}\r\n//@mixin fm {font-family: 'Rubik-Medium',sans-serif;}\r\n//@mixin fdb {font-family: 'Rubik-SemiBold',sans-serif;}\r\n//@mixin fb {font-family: 'Rubik-Bold',sans-serif;}\r\n\r\n/*images*/\r\n\r\n@mixin cover {\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: 50% 50%; }\r\n\r\n\r\n// vertical-align at center\r\n@mixin vcenter {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%,-50%); }\r\n\r\n/*=======================START-MEDIA=====================*/\r\n@mixin media($width) {\r\n  @media only screen and (max-width: $width+ \"px\") {\r\n    @content; } }\r\n\r\n@mixin min-media($width) {\r\n  @media only screen and (min-width: $width+ \"px\") {\r\n    @content; } }\r\n\r\n/*=======================END-MEDIA=====================*/\r\n//placeholder\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder { @content; }\r\n  &:-moz-placeholder           { @content; }\r\n  &::-moz-placeholder          { @content; }\r\n  &:-ms-input-placeholder      { @content; }\r\n}\r\n\r\n// font size\r\n\r\n@mixin css-lock($min-size: 1, $max-size: 1.4, $min-width: 20, $max-width: 100, $property: font-size, $unit: px) {\r\n  #{$property}: #{$max-size}#{$unit};\r\n  #{$property}: calc(#{$min-size}#{$unit} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}#{$unit}) / (#{$max-width} - #{$min-width})));\r\n  @media (max-width: #{$min-width}#{$unit}) {\r\n    #{$property}: #{$min-size}#{$unit}; }\r\n  @media (min-width: #{$max-width}#{$unit}) {\r\n    #{$property}: #{$max-size}#{$unit}; } }\r\n\r\n@function decimal-round($number, $digits: 0, $mode: round) {\r\n  $n: 1;\r\n  // $number must be a number\r\n  @if type-of($number) != number {\r\n    @warn '#{ $number } is not a number.';\r\n    @return $number;\r\n  }\r\n  // $digits must be a unitless number\r\n  @if type-of($digits) != number {\r\n    @warn '#{ $digits } is not a number.';\r\n    @return $number;\r\n  } @else if not unitless($digits) {\r\n    @warn '#{ $digits } has a unit.';\r\n    @return $number;\r\n  }\r\n  @if $digits > 0 {\r\n    @for $i from 1 through $digits {\r\n      $n: $n * 10;\r\n    }\r\n  }\r\n  @if $mode == round {\r\n    @return round($number * $n) / $n;\r\n  } @else if $mode == ceil {\r\n    @return ceil($number * $n) / $n;\r\n  } @else if $mode == floor {\r\n    @return floor($number * $n) / $n;\r\n  } @else {\r\n    @warn '#{ $mode } is undefined keyword.';\r\n    @return $number;\r\n  }\r\n}\r\n\r\n@mixin font-settings($font-size, $light-height, $round-light-height: 2) {\r\n  font-size: $font-size + px;\r\n  line-height: decimal-round($light-height / $font-size, $round-light-height);\r\n}\r\n\r\n// end font size\r\n\r\n\r\n/* media breakpoint mixin */\r\n@mixin media-breakpoint-up($name) {\r\n  @if map_has_key($breakpoint, $name) {\r\n    @media (min-width: map_get($breakpoint, $name)) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @media (min-width: $name) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder { @content; }\r\n  &:-moz-placeholder           { @content; }\r\n  &::-moz-placeholder          { @content; }\r\n  &:-ms-input-placeholder      { @content; }\r\n}\r\n\r\n/* Single property transition mixin */\r\n$animation-speed: .3s;\r\n\r\n@mixin multi-transition($transition: $speed, $function: $time-function, $properties-list...) {\r\n  transition-duration: $transition;\r\n  transition-timing-function: $function;\r\n  transition-property: $properties-list;\r\n}\r\n\r\n@mixin size($width, $height: $width) {\r\n  width: $width + px;\r\n  height: $height + px;\r\n}\r\n\r\n\r\n// fonts\r\n@mixin font($weight, $style, $fileName, $folderName, $fontName: $folderName) {\r\n  @font-face {\r\n    font-family: '#{$fontName}';\r\n    font-display: swap;\r\n    src: url(\"../fonts/#{$folderName}/#{$fileName}.ttf\") format(\"truetype\");\r\n    font-weight: #{$weight};\r\n    font-style: #{$style};\r\n  }\r\n}\r\n\r\n// hover\r\n@mixin hover($properties: all, $speed: $speed, $time-function: $time-function) {\r\n  transition-timing-function: $time-function;\r\n  transition-duration: $speed;\r\n  transition-property: $properties;\r\n  @media (any-hover: hover) {\r\n    &:hover {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// hover and focus for link\r\n@mixin hover-focus-link($color: $primary) {\r\n  @include hover {\r\n    color: $color;\r\n  }\r\n  &:focus {\r\n    color: $color;\r\n  }\r\n}\r\n\r\n// hover and focus for property\r\n@mixin hover-focus {\r\n  @include hover {\r\n    @content;\r\n  }\r\n  &:focus {\r\n    @content;\r\n  }\r\n}\r\n\r\n// hide\r\n@mixin none() {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  border: 0;\r\n  padding: 0;\r\n  white-space: nowrap;\r\n  clip-path: inset(100%);\r\n  clip: rect(0 0 0 0);\r\n  overflow: hidden;\r\n}\r\n\r\n// gap\r\n@mixin gap($property, $value) {\r\n  @if $property == column {\r\n    @supports (column-gap: $value) {\r\n      column-gap: $value;\r\n    }\r\n    @supports not (column-gap: $value) {\r\n      margin-right: calc( 0px - (#{$value} / 2));\r\n      margin-left: calc( 0px - (#{$value} / 2));\r\n      & > * {\r\n        margin-right: calc(#{$value} / 2);\r\n        margin-left: calc(#{$value} / 2);\r\n      }\r\n    }\r\n  } @else if $property == row {\r\n    @supports (row-gap: $value) {\r\n      row-gap: $value;\r\n    }\r\n    @supports not (row-gap: $value) {\r\n      & {\r\n        margin-top: -$value;\r\n      }\r\n      & > * {\r\n        margin-top: $value;\r\n      }\r\n    }\r\n  } @else if $property == gap {\r\n    @supports (gap: $value) {\r\n      gap: $value;\r\n    }\r\n    @supports not (gap: $value) {\r\n      margin-right: calc(0px - (#{$value} / 2));\r\n      margin-left: calc(0px - (#{$value} / 2));\r\n      margin-top: -$value;\r\n      & > * {\r\n        margin-right: calc(#{$value} / 2);\r\n        margin-left: calc(#{$value} / 2);\r\n        margin-top: $value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// supports\r\n@mixin supports($property, $value) {\r\n  @supports ($property: $value) {\r\n    #{$property}: $value;\r\n  }\r\n  @supports not ($property: $value) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// grid\r\n@mixin grid-col($column) {\r\n  &__col-#{$column} {\r\n    grid-template-columns: repeat(#{$column}, 1fr);\r\n  }\r\n}\r\n\r\n// flex-basis\r\n@mixin flex-template($item, $gap) {\r\n  flex-basis: calc((100% - #{$item - 1} * #{$gap}) / #{$item});\r\n}\r\n\r\n@mixin line-clamp($clamp, $height: none) {\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: $clamp;\r\n  -webkit-box-orient: vertical;\r\n  text-overflow: ellipsis;\r\n  max-height: $height;\r\n  overflow: hidden;\r\n}\r\n\r\n//@mixin gap($value-column, $value-row: $value-column) {\r\n//  @if $value-row == 0 {\r\n//    & {\r\n//      margin-right: calc( 0px - (#{$value-column} / 2));\r\n//      margin-left: calc( 0px - (#{$value-column} / 2));\r\n//    }\r\n//    & > * {\r\n//      margin-right: calc(#{$value-column} / 2);\r\n//      margin-left: calc(#{$value-column} / 2);\r\n//    }\r\n//  }\r\n//  @else if $value-column == 0 {\r\n//    & {\r\n//      margin-top: -$value-row;\r\n//    }\r\n//    & > * {\r\n//      margin-top: $value-row;\r\n//    }\r\n//  }\r\n//  @else {\r\n//    & {\r\n//      margin-left: calc(0px - #{$value-column} / 2);\r\n//      margin-right: calc(0px - #{$value-column} / 2);\r\n//      margin-top: -$value-row;\r\n//    }\r\n//    & > * {\r\n//      margin-left: calc(#{$value-column} / 2);\r\n//      margin-right: calc(#{$value-column} / 2);\r\n//      margin-top: $value-row;\r\n//    }\r\n//  }\r\n//}\r\n\r\n@function decimal-round($number, $digits: 0, $mode: round) {\r\n  $n: 1;\r\n  // $number must be a number\r\n  @if type-of($number) != number {\r\n    @warn '#{ $number } is not a number.';\r\n    @return $number;\r\n  }\r\n  // $digits must be a unitless number\r\n  @if type-of($digits) != number {\r\n    @warn '#{ $digits } is not a number.';\r\n    @return $number;\r\n  } @else if not unitless($digits) {\r\n    @warn '#{ $digits } has a unit.';\r\n    @return $number;\r\n  }\r\n  @if $digits > 0 {\r\n    @for $i from 1 through $digits {\r\n      $n: $n * 10;\r\n    }\r\n  }\r\n  @if $mode == round {\r\n    @return round($number * $n) / $n;\r\n  } @else if $mode == ceil {\r\n    @return ceil($number * $n) / $n;\r\n  } @else if $mode == floor {\r\n    @return floor($number * $n) / $n;\r\n  } @else {\r\n    @warn '#{ $mode } is undefined keyword.';\r\n    @return $number;\r\n  }\r\n}\r\n\r\n",".hero {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  &__slider {\r\n\r\n  }\r\n  &__slide {\r\n    position: relative;\r\n  }\r\n  &__slide-bg {\r\n    z-index: 0;\r\n    position: relative;\r\n  }\r\n  &__slide:before {\r\n    content: '';\r\n    z-index: 1;\r\n    background: rgba(0, 0, 0, 0.65);\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0px;\r\n    top: 0px;\r\n  }\r\n  &__content {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 2;\r\n  }\r\n  &__title {\r\n    @include font-settings(96, 114);\r\n    @include min-media(1200) {\r\n      @include font-settings(64, 76);\r\n    }\r\n    @include min-media(767) {\r\n      @include font-settings(24, 28);\r\n    }\r\n  }\r\n}\r\n",".contact {\r\n  padding-top: 86px;\r\n  &__section {\r\n    padding-top: 83px;\r\n    @include media(1200) {\r\n      padding-top: 143px;\r\n    }\r\n    @include media(540) {\r\n      padding-top: 54px;\r\n    }\r\n  }\r\n  &__row {\r\n    @include media(1200) {\r\n      flex-direction: column-reverse;\r\n    }\r\n  }\r\n  &__item {\r\n    @include media(1200) {\r\n      padding-left: $desktop-padding;\r\n      padding-right: $desktop-padding;\r\n      .row__item-right-container {\r\n        & > * {\r\n          margin-left: 0px;\r\n          margin-right: 0px;\r\n        }\r\n      }\r\n    }\r\n    @include media(540) {\r\n      padding-left: $mobile-padding;\r\n      padding-right: $mobile-padding;\r\n    }\r\n  }\r\n  &__map {\r\n    line-height: 0px;\r\n    frame {\r\n      border: 0px !important;\r\n    }\r\n    @include media(1200) {\r\n      padding: 0px;\r\n    }\r\n  }\r\n  &__heading {\r\n    padding-left: 23px;\r\n    margin-bottom: 42px;\r\n    @include media(1200) {\r\n      padding-left: 0px;\r\n      margin-bottom: 52px;\r\n    }\r\n    @include media(540) {\r\n      margin-bottom: 24px;\r\n    }\r\n  }\r\n  &__cards {\r\n    @include media(1200) {\r\n      flex-direction: column;\r\n    }\r\n    &:not(:last-child) {\r\n      margin-bottom: 32px;\r\n    }\r\n    .card {\r\n      &:not(:last-child) {\r\n        @include media(1200) {\r\n          margin-bottom: 20px;\r\n        }\r\n        @include media(540) {\r\n          margin-bottom: 24px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &__form {\r\n    margin-top: 10px;\r\n    margin-bottom: -5px;\r\n    .form__button {\r\n      margin: 12px 0px 0px;\r\n    }\r\n  }\r\n  &__button-wrapper {\r\n    padding: 33px;\r\n    @include media(1200) {\r\n      padding-top: 52px;\r\n      padding-bottom: 72px;\r\n    }\r\n    @include media(540) {\r\n      border-radius: 0px;\r\n      padding-left: $mobile-padding;\r\n      padding-right: $mobile-padding;\r\n      &:nth-child(n) {\r\n        margin-left: -$mobile-padding;\r\n        margin-right: -$mobile-padding;\r\n      }\r\n    }\r\n  }\r\n  &__button-title {\r\n    margin-bottom: 39px;\r\n    text-align: center;\r\n    @include min-media(1201) {\r\n      display: none;\r\n    }\r\n  }\r\n  &__item {\r\n    .button {\r\n      justify-content: center;\r\n      text-align: center;\r\n    }\r\n  }\r\n}"]}